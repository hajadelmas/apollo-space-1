{"ast":null,"code":"var _jsxFileName = \"/Users/loicdelmas/Desktop/cours_wild/apollo-space-x/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const GET_LAUNCHES = gql`\n  query GetLaunches {\n    launches(limit: 5) {\n      launch_date_utc\n      launch_success\n      rocket {\n        rocket_name\n      }\n      links {\n        video_link\n      }\n      details\n    }\n  }\n`;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LAUNCHES);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: data.launches.map(launch => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: launch.launch_date_utc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/loicdelmas/Desktop/cours_wild/apollo-space-x/src/App.js"],"names":["useQuery","gql","App","GET_LAUNCHES","loading","error","data","launches","map","launch","launch_date_utc"],"mappings":";;;;AACA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,GAAnB,QAA+B,gBAA/B;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,YAAY,GAAGF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdE;AAgBF,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACG,YAAD,CAAzC;AAEA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIT,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAmBC,MAAD,iBACjB;AAAA,gBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCQR,G;UAkBwBF,Q;;;KAlBxBE,G;AAkCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useQuery, gql, } from \"@apollo/client\"\n\n\n\nfunction App() {\n\n  const GET_LAUNCHES = gql`\n  query GetLaunches {\n    launches(limit: 5) {\n      launch_date_utc\n      launch_success\n      rocket {\n        rocket_name\n      }\n      links {\n        video_link\n      }\n      details\n    }\n  }\n`;\n\nconst { loading, error, data } = useQuery(GET_LAUNCHES);\n\nif (loading) return <p>Loading...</p>\nif (error) return <p>Error :(</p>\n\n\n\n  return (\n    <div className=\"App\">\n      {data.launches.map((launch) => (\n        <li>{launch.launch_date_utc}</li>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}